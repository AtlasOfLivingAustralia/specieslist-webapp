buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:7.0.5"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.6"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.4.6"
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

version "4.5.0-SNAPSHOT"
group "au.org.ala"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin:"maven-publish"

publishing {
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }
    publications {
        mavenJar(MavenPublication) {
            artifact bootWar
        }
    }
}

bootWar {
    launchScript()
}

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor 0, 'seconds'
        cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:cache-ehcache:3.0.0"
    implementation "org.grails.plugins:async"

    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.4.18.Final"
    implementation "org.hibernate:hibernate-ehcache:5.4.9.Final"

    implementation "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtimeOnly "org.glassfish.web:el-impl:2.1.2-b03"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.4.6"
    implementation 'dk.glasius:external-config:3.1.1'
    runtimeOnly "mysql:mysql-connector-java:8.0.23"
    implementation "org.codehaus.groovy.modules.http-builder:http-builder:0.7.2"
    implementation "org.nibor.autolink:autolink:0.5.0"
    implementation "com.opencsv:opencsv:3.7"

    runtimeOnly group: 'org.cache2k', name: 'cache2k-jcache', version: '1.2.0.Final'
    runtimeOnly group: 'org.cache2k', name: 'cache2k-api', version: '1.2.0.Final'
    runtimeOnly group: 'org.cache2k', name: 'cache2k-core', version: '1.2.0.Final'

    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
    testImplementation "org.seleniumhq.selenium:selenium-api:3.14.0"
    testImplementation "org.seleniumhq.selenium:selenium-support:3.14.0"
    testImplementation "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"

    // ALA
    implementation "org.grails.plugins:ala-auth:$alaSecurityLibsVersion"
    implementation "org.grails.plugins:ala-ws-security-plugin:$alaSecurityLibsVersion"
    implementation "org.grails.plugins:ala-ws-plugin:$alaSecurityLibsVersion"
    runtimeOnly "org.grails.plugins:ala-bootstrap3:4.3.0"
    implementation "au.org.ala:userdetails-service-client:$alaSecurityLibsVersion"
    runtimeOnly ("org.grails.plugins:ala-admin-plugin:2.3.0") {
        exclude module: "cache"
    }

    implementation 'au.org.ala:ala-cas-client:3.0.0'
    implementation ("au.org.ala.names:ala-namematching-client:1.8.1") {
        exclude group: "com.squareup.okhttp3", module: "okhttp"
        exclude module: "jsr250-api"
        exclude module: "sisu-guava"
        exclude module: "cache2k-api"
    }
    implementation 'au.org.ala.plugins:openapi:1.1.0'

    implementation 'org.gbif:gbif-common:0.37'
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always',
        '-noverify',
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

integrationTest {
    systemProperties System.properties
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

//webdriverBinaries {
//    chromedriver '2.45.0'
//    geckodriver '0.24.0'
//}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}


assets {
    minifyJs = true
    minifyCss = true
}
